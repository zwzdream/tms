<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wistronits.tms.dao.IResumeDao">


	<resultMap id="ResumeBeanResultMap" type="com.wistronits.tms.entity.ResumeBean">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="first_name" property="firstName" jdbcType="VARCHAR" />
		<result column="last_name" property="lastName" jdbcType="VARCHAR" />
		<result column="birth" property="birth" jdbcType="DATE" />
		<result column="gender" property="gender" jdbcType="BOOLEAN" />
		<result column="mobile" property="mobile" jdbcType="VARCHAR" />
		<result column="starts" property="starts" jdbcType="DATE" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="residency" property="residency" jdbcType="VARCHAR" />
		<result column="education" property="education" jdbcType="VARCHAR" />
		<result column="workExp" property="workExp" jdbcType="VARCHAR" />
		<result column="projectExp" property="projectExp" jdbcType="VARCHAR" />
		<result column="last_m_time" property="lastMTime" jdbcType="DATE"/>
		<result column="resume_filepath" property="filePath" jdbcType="VARCHAR" />
	</resultMap>

     
	<insert id="addResource" parameterType="com.wistronits.tms.entity.ResumeBean" useGeneratedKeys="true" keyProperty="id">
       insert into resume (first_name, last_name,birth,gender,mobile,starts,email,residency,education,workExp,projectExp,last_m_time)
     		values (#{firstName,jdbcType=VARCHAR}, #{lastName,jdbcType=VARCHAR},#{birth,jdbcType=DATE},
     		#{gender,jdbcType=BOOLEAN},#{mobile,jdbcType=VARCHAR},#{starts,jdbcType=DATE},#{email,jdbcType=VARCHAR},#{residency,jdbcType=VARCHAR},
     		#{education,jdbcType=VARCHAR},#{workExp,jdbcType=VARCHAR},#{projectExp,jdbcType=VARCHAR},#{lastMTime,jdbcType=DATE});
     		
     		insert into resume_file(resume_filepath,resume_id) values(#{filePath,jdbcType=VARCHAR},LAST_INSERT_ID()) ;
     </insert>

     <select id="getAllResources" resultMap="ResumeBeanResultMap">
     	SELECT  A.*,B.resume_filepath FROM RESUME A   LEFT JOIN resume_file B ON A.id=B.resume_id ORDER BY A.id 
     </select>
     
     <select id="getResourcesByIds" resultMap="ResumeBeanResultMap" >
     	select A.*,B.resume_filepath from RESUME A  LEFT JOIN resume_file B ON A.id=B.resume_id  where A.id in 
     	<foreach item="item" index="index" collection="list" open="(" separator="," close=")">  
  			#{item}  
 		</foreach>
     </select>
     
     <select id="getAllResourcesCount" resultType="int">
     	select count(*) from resume
     </select>
     
     <delete id="deleteResource" parameterType="int">
     	delete from resume where id=#{id};
     	delete from resume_file where resume_id=#{id};
     </delete>
     
     <select id="getResourceById" parameterType="int" resultMap="ResumeBeanResultMap">
     		select A.*,B.resume_filepath from RESUME A  LEFT JOIN resume_file B ON A.id=B.resume_id  where A.id=#{id}
     </select>
     
     
     <update id="editResource" parameterType="com.wistronits.tms.entity.ResumeBean" >
	update resume set first_name=#{firstName},last_name=#{lastName},birth=#{birth},gender=#{gender},mobile=#{mobile},
	starts=#{starts},email=#{email},residency=#{residency},workExp=#{workExp},projectExp=#{projectExp},last_m_time=#{lastMTime} where id=#{id} ;
		<if test="filePath!=null and filePath!=''">
	  	update resume_file set resume_filepath=#{filePath} where resume_id=#{id};
		 </if>
	
	</update>
	
	<select id="getCurrentWeekCount" resultType="int">
		select count(*) from 
		(select id from resume where last_m_time>DATE_SUB(CURDATE(), INTERVAL 2 WEEK)) temp
	</select>
     
    <select id="haveBeans" resultMap="ResumeBeanResultMap">
    	SELECT  a.* FROM RESUME a   LEFT JOIN jd_resume_resource b ON a.id=b.resource_id 
    	LEFT JOIN jd c ON b.jd_id=c.no WHERE c.no=#{no} 
     </select>
	 <select id="haveNotBeans" resultMap="ResumeBeanResultMap">
		SELECT  a.* FROM RESUME a WHERE  NOT EXISTS (SELECT b.resource_id FROM jd_resume_resource b WHERE a.id=b.resource_id AND  b.jd_id=#{no} ) 
     </select> 
     
	<insert id="addResourceToJD" >
	  insert into jd_resume_resource(jd_id,resource_id) values(#{0},#{1})  
	</insert>

	 <delete id="deleteResourceFromJD">
     	delete from jd_resume_resource where jd_id=#{0} and resource_id=#{1}
     </delete>
     
      <select id="getAddIdsByNo" resultType="int">
     SELECT resource_id FROM jd_resume_resource WHERE resource_id IS NOT NULL AND jd_id=#{no}
	</select> 
</mapper>